<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Countdown</title>
    <link rel="stylesheet" href="/styles.css">
    <script>
        let countdown;
        let timeLeft = <%= task.expected_duration %> * 60; // Convert minutes to seconds
        let isPaused = false;

        function startCountdown() {
            countdown = setInterval(() => {
                if (timeLeft <= 0) {
                    clearInterval(countdown);
                    alert('Time is up!');
                } else {
                    timeLeft--;
                    document.getElementById('timer').innerText = formatTime(timeLeft);
                }
            }, 1000);
        }

        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            const secs = seconds % 60;
            return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;
        }

        function pauseCountdown() {
            clearInterval(countdown);
            isPaused = true;
            document.getElementById('pauseButton').innerText = 'Resume';
            document.getElementById('pauseButton').onclick = resumeCountdown;
        }

        function resumeCountdown() {
            startCountdown();
            isPaused = false;
            document.getElementById('pauseButton').innerText = 'Pause';
            document.getElementById('pauseButton').onclick = pauseCountdown;
        }

        async function changeStatus(newStatus) {
            const response = await fetch(`/tasks/status/<%= task._id %>`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${document.cookie.split('=')[1]}`
                },
                body: JSON.stringify({ status: newStatus })
            });
            if (response.ok) {
                alert(`Task status changed to ${newStatus}`);
                window.location.href = '/tasks';
            } else {
                alert('Error changing task status');
            }
        }

        window.onload = startCountdown;
    </script>
</head>
<body>
    <div class="container">
        <h1>Task Countdown</h1>
        <div id="timer"><%= task.expected_duration %>:00</div>
        <button onclick="changeStatus('done')">Done</button>
        <button id="pauseButton" onclick="pauseCountdown()">Pause</button>
        <button onclick="changeStatus('to do')">Cancel</button>
    </div>
</body>
</html>