<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tasks</title>
    <link rel="stylesheet" href="/styles.css">
    <script>
        async function changeStatus(taskId, newStatus) {
            const response = await fetch(`/api/tasks/status/${taskId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${document.cookie.split('=')[1]}`
                },
                body: JSON.stringify({ status: newStatus })
            });
            if (response.ok) {
                alert(`Task status changed to ${newStatus}`);
                location.reload();
            } else {
                alert('Error changing task status');
            }
        }

        function viewTask(taskId) {
            window.location.href = `/tasks/view/${taskId}`;
        }

        async function logout() {
            const response = await fetch('/auth/logout', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            if (response.ok) {
                window.location.href = '/';
            } else {
                alert('Error logging out');
            }
        }
    </script>
</head>
<body>
    <header>
        <div class="container">
            <div id="branding">
                <h1>Task Manager</h1>
            </div>
            <nav>
                <ul>
                    <li><a href="/tasks">Tasks</a></li>
                    <li><a href="/tasks/trash">Trashed Tasks</a></li>
                </ul>
            </nav>
        </div>
    </header>
    <div class="container">
        <h1>Tasks</h1>
        <button onclick="window.location.href='/create-task'">Create Task</button>
        <% if (tasks && tasks.length > 0) { 
            const priorityOrder = { 'high': 1, 'medium': 2, 'low': 3 };
            const sortTasksByPriority = (tasks) => tasks.sort((a, b) => priorityOrder[a.priority.toLowerCase()] - priorityOrder[b.priority.toLowerCase()]);
            const sortedToDoTasks = sortTasksByPriority(tasks.filter(task => task.status === 'to do'));
            const sortedDoneTasks = sortTasksByPriority(tasks.filter(task => task.status === 'done'));
        %>
            <table>
                <thead>
                    <tr>
                        <th>To Do</th>
                        <th>Done</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <% sortedToDoTasks.forEach(task => { %>
                                <div class="task-title" onclick="viewTask('<%= task._id %>')">
                                    <span class="priority-dot priority-<%= task.priority.toLowerCase() %>"></span>
                                    <%= task.title %>
                                </div>
                                <div class="due-date">Due: <%= task.due_date.toDateString() %></div>
                            <% }) %>
                        </td>
                        <td>
                            <% sortedDoneTasks.forEach(task => { %>
                                <div class="task-title" onclick="viewTask('<%= task._id %>')">
                                    <span class="priority-dot priority-<%= task.priority.toLowerCase() %>"></span>
                                    <%= task.title %>
                                </div>
                                <div class="due-date">Due: <%= task.due_date.toDateString() %></div>
                            <% }) %>
                        </td>
                    </tr>
                </tbody>
            </table>
        <% } else { %>
            <p>No tasks found.</p>
        <% } %>
    </div>
    <button class="logout-button" onclick="logout()">Logout</button>
</body>
</html>